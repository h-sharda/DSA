// Problem: Upgrade to Cloud Saving.  
// Link: https://leetcode.com/problems/minimize-the-maximum-difference-of-pairs

class Solution {
public:
    bool isValid(vector<int> &nums, int p, int target) {
        int n = nums.size();

        for (int i = 1; i < n; i++) {
            if ( p == 0 ) return true;
            if ( nums[i]-nums[i-1] <= target ) p--, i++;
        }

        return p <= 0;
    }

    int minimizeMax(vector<int>& nums, int p) {
        sort(nums.begin(), nums.end());
        int low = 0, high = nums.back() - nums[0];

        while (low <= high) {
            int mid = (low + high) /2;
            if (isValid(nums, p, mid)) high = mid - 1;
            else low = mid + 1;
        }

        return low;
    }
};